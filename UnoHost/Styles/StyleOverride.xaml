<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:um="using:Uno.Material"
                    xmlns:toolkit="using:Uno.UI.Toolkit"
                    xmlns:ut="using:Uno.Themes"
                    xmlns:utu="using:Uno.Toolkit.UI">

    <SolidColorBrush x:Key="MyFocusVisualPrimaryBrush" Color="Green"/>
    <SolidColorBrush x:Key="MyFocusVisualSecondaryBrush" Color="LightGreen"/>


    <Style TargetType="Button" x:Key="TallerButtons">
        <Setter Property="Padding" Value="4,16" />
    </Style>

    <Style TargetType="Button" x:Key="ContentDialogPrimaryButtonStyle">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Green" BorderThickness="5">
                        <ContentPresenter Background="Red" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="TouchButton" TargetType="Button" BasedOn="{StaticResource FilledButtonStyle}">
        <Setter Property="Width" Value="84"/>
        <Setter Property="Height" Value="58"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="TouchButtonAlpha" TargetType="Button" BasedOn="{StaticResource FilledButtonStyle}">
        <Setter Property="Width" Value="55"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="TouchButtonAlphaLarge" TargetType="Button" BasedOn="{StaticResource FilledButtonStyle}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style
		x:Key="DmxCoreCardStyle" BasedOn="{StaticResource DmxCoreAvatarFilledCardStyle}" TargetType="utu:Card">

        <Setter Property="Background" Value="{ThemeResource AvatarOutlinedCardBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AvatarOutlinedCardBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CardBorderThickness}" />
        <Setter Property="FocusVisualPrimaryBrush" Value="{StaticResource MyFocusVisualPrimaryBrush}"/>
        <Setter Property="FocusVisualSecondaryBrush" Value="{StaticResource MyFocusVisualSecondaryBrush}"/>
        <Setter Property="FocusVisualPrimaryThickness" Value="3" />
        <Setter Property="FocusVisualSecondaryThickness" Value="1" />
        <Setter Property="FocusVisualMargin" Value="-10,-3" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
    </Style>

    <!--  Avatar Filled  -->
    <Style
		x:Key="DmxCoreAvatarFilledCardStyle"
		BasedOn="{StaticResource DmxCoreAvatarBaseCardStyle}"
		TargetType="utu:Card">

        <Setter Property="Background" Value="{ThemeResource AvatarFilledCardBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AvatarFilledCardBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:Card">
                    <Grid
						x:Name="GridRoot"
						MinWidth="{TemplateBinding MinWidth}"
						MinHeight="{TemplateBinding MinHeight}"
						MaxWidth="{TemplateBinding MaxWidth}"
						MaxHeight="{TemplateBinding MaxHeight}"
						Margin="{TemplateBinding Margin}"
						HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  Border for PointedOver state  -->
                        <Border
							x:Name="HoverOverlay"
							Grid.RowSpan="3"
							Grid.ColumnSpan="3"
							Background="{ThemeResource AvatarFilledCardBorderBrushPointerOver}"
							Opacity="0" />

                        <!--  Border for Focus state  -->
                        <Border
							x:Name="FocusedOverlay"
							Grid.RowSpan="3"
							Grid.ColumnSpan="3"
							Background="{ThemeResource AvatarFilledCardBorderBrushFocused}"
							Opacity="0" />

                        <!--  Avatart part  -->
                        <ContentPresenter
							x:Name="AvatarContentPresenter"
							Margin="16,0,0,0"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding AvatarContent}"
							ContentTemplate="{TemplateBinding AvatarContentTemplate}"
							IsHitTestVisible="False"
							Visibility="{Binding AvatarContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <StackPanel Grid.Column="1" IsHitTestVisible="False">
                            <!--  Header part  -->
                            <ContentPresenter
								x:Name="HeaderContentPresenter"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								AutomationProperties.AccessibilityView="Raw"
								Content="{TemplateBinding HeaderContent}"
								ContentTemplate="{TemplateBinding HeaderContentTemplate}"
								Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                            <!--  SubHeader part  -->
                            <ContentPresenter
								x:Name="SubHeaderContentPresenter"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								AutomationProperties.AccessibilityView="Raw"
								Content="{TemplateBinding SubHeaderContent}"
								ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
								Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />
                        </StackPanel>

                        <!--  Ripple effect  -->
                        <!--<um:Ripple
							Grid.RowSpan="3"
							Grid.ColumnSpan="3"
							Padding="{TemplateBinding Padding}"
							AutomationProperties.AccessibilityView="Raw"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{StaticResource CardCornerRadius}"
							Feedback="{ThemeResource OnSurfaceFocusedBrush}" />-->

                        <!--  Icons section part  -->
                        <ContentPresenter
							x:Name="IconsContentPresenter"
							Grid.Column="2"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding IconsContent}"
							ContentTemplate="{TemplateBinding IconsContentTemplate}"
							Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  Media content part  -->
                        <ContentPresenter
							x:Name="MediaContentPresenter"
							Grid.Row="1"
							Grid.ColumnSpan="3"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding MediaContent}"
							ContentTemplate="{TemplateBinding MediaContentTemplate}"
							IsHitTestVisible="False"
							Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  Supporting Content part  -->
                        <ContentPresenter
							x:Name="SupportingContentPresenter"
							Grid.Row="2"
							Grid.ColumnSpan="3"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding SupportingContent}"
							ContentTemplate="{TemplateBinding SupportingContentTemplate}"
							Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <!--<VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation
											Storyboard.TargetName="HoverOverlay"
											Storyboard.TargetProperty="Opacity"
											From="0"
											To="1"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>-->
                                <!--<VisualState x:Name="Pressed">
                                    <Storyboard>

                                        <DoubleAnimation
											Storyboard.TargetName="HoverOverlay"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation
											Storyboard.TargetName="FocusedOverlay"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>-->
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                        <Setter Target="GridRoot.Opacity" Value="0.38" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerFocused" />
                                <VisualState x:Name="Unfocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Card Base Style with Avatar  -->
    <Style
		x:Key="DmxCoreAvatarBaseCardStyle"
		BasedOn="{StaticResource DmxCoreBaseCardStyle}"
		TargetType="utu:Card">

        <Setter Property="SupportingContentTemplate" Value="{StaticResource M3DefaultAvatarSupportingContentTemplate}" />
        <Setter Property="AvatarContentTemplate" Value="{StaticResource M3DefaultAvatarContentTemplate}" />
    </Style>

    <!--  Filled  -->
    <Style
		x:Key="DmxCoreFilledCardStyle"
		BasedOn="{StaticResource DmxCoreBaseCardStyle}"
		TargetType="utu:Card">
        <Setter Property="Background" Value="{ThemeResource FilledCardBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource FilledCardBorderBrush}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:Card">
                    <Grid
						x:Name="GridRoot"
						MinWidth="{TemplateBinding MinWidth}"
						MinHeight="{TemplateBinding MinHeight}"
						MaxWidth="{TemplateBinding MaxWidth}"
						MaxHeight="{TemplateBinding MaxHeight}"
						Margin="{TemplateBinding Margin}"
						HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Border for PointerOver State  -->
                        <Border
							x:Name="HoverOverlay"
							Grid.RowSpan="4"
							Background="{ThemeResource FilledCardBorderBrushPointerOver}"
							Opacity="0" />

                        <!--  Border for Focused State  -->
                        <Border
							x:Name="FocusedOverlay"
							Grid.RowSpan="4"
							Background="{ThemeResource FilledCardBorderBrushFocused}"
							Opacity="0" />

                        <!--  Media content part  -->
                        <ContentPresenter
							x:Name="MediaContentPresenter"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding MediaContent}"
							ContentTemplate="{TemplateBinding MediaContentTemplate}"
							IsHitTestVisible="False"
							Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  Header part  -->
                        <ContentPresenter
							x:Name="HeaderContentPresenter"
							Grid.Row="1"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding HeaderContent}"
							ContentTemplate="{TemplateBinding HeaderContentTemplate}"
							Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  SubHeader part  -->
                        <ContentPresenter
							x:Name="SubHeaderContentPresenter"
							Grid.Row="2"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding SubHeaderContent}"
							ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
							Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  Ripple effect  -->
                        <!--<um:Ripple
							Grid.RowSpan="4"
							Padding="{TemplateBinding Padding}"
							AutomationProperties.AccessibilityView="Raw"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{StaticResource CardCornerRadius}"
							Feedback="{ThemeResource OnSurfaceFocusedBrush}" />-->

                        <!--  Supporting Content part  -->
                        <ContentPresenter
							x:Name="SupportingContentPresenter"
							Grid.Row="3"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding SupportingContent}"
							ContentTemplate="{TemplateBinding SupportingContentTemplate}"
							Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyOrNullToCollapsedConverter}}" />

                        <!--  Icons section part  -->
                        <ContentPresenter
							x:Name="IconsContentPresenter"
							Grid.Row="3"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							AutomationProperties.AccessibilityView="Raw"
							Content="{TemplateBinding IconsContent}"
							ContentTemplate="{TemplateBinding IconsContentTemplate}"
							Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <!--<Storyboard>
                                        <DoubleAnimation
											Storyboard.TargetName="HoverOverlay"
											Storyboard.TargetProperty="Opacity"
											From="0"
											To="1"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>-->
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <!--<Storyboard>

                                        <DoubleAnimation
											Storyboard.TargetName="HoverOverlay"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation
											Storyboard.TargetName="FocusedOverlay"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="{StaticResource MaterialAnimationDuration}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>-->
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                        <Setter Target="GridRoot.Opacity" Value="0.38" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerFocused" />
                                <VisualState x:Name="Unfocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Filled -->
    <Style x:Key="DmxCoreFilledCardContentControlStyle"
		   BasedOn="{StaticResource MaterialBaseCardContentControlStyle}"
		   TargetType="utu:CardContentControl">
        <Setter Property="Background" Value="{ThemeResource FilledCardContentBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource FilledCardContentBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="utu:CardContentControl">
                    <Grid x:Name="GridRoot"
						  MinWidth="{TemplateBinding MinWidth}"
						  MinHeight="{TemplateBinding MinHeight}"
						  MaxWidth="{TemplateBinding MaxWidth}"
						  MaxHeight="{TemplateBinding MaxHeight}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">
                        <!-- Ripple effect -->
                        <!-- Will add the ripple effect later on when this issue is taken care of: -->
                        <!-- https://github.com/unoplatform/uno.ui.toolkit/issues/88 -->
                        <!--<um:Ripple Feedback="{ThemeResource FilledCardContentBorderBrushFocused}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 CornerRadius="{StaticResource MaterialCardCornerRadius}"
										 Padding="{TemplateBinding Padding}"
										 AutomationProperties.AccessibilityView="Raw" />-->

                        <!-- Main ContentPresenter -->
                        <ContentPresenter x:Name="ContentPresenter"
										  Padding="{TemplateBinding Padding}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" />

                        <!-- Border for Pressed State -->
                        <Border x:Name="HoverPressed"
								Background="{ThemeResource FilledCardContentBorderBrushPressed}"
								IsHitTestVisible="False"
								Opacity="0" />

                        <!-- Border for PointerOver State -->
                        <Border x:Name="HoverOverlay"
								Background="{ThemeResource FilledCardContentBorderBrushPointerOver}"
								IsHitTestVisible="False"
								Opacity="0" />

                        <!-- Border for Focused State -->
                        <Border x:Name="FocusedOverlay"
								Background="{ThemeResource FilledCardContentBorderBrushFocused}"
								IsHitTestVisible="False"
								Opacity="0" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <!--<Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>-->
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <!--<Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverPressed"
														 Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="0"
														 Duration="{StaticResource MaterialDelayedBeginTime}">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>-->
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HoverOverlay.Opacity" Value="0" />
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                        <Setter Target="GridRoot.Opacity" Value="0.38" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerFocused" />
                                <VisualState x:Name="Unfocused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusedOverlay.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Outlined -->
    <Style x:Key="DmxCoreOutlinedCardContentControlStyle"
		   BasedOn="{StaticResource DmxCoreFilledCardContentControlStyle}"
		   TargetType="utu:CardContentControl">
        <Setter Property="Background" Value="{ThemeResource OutlinedCardContentBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource OutlinedCardContentBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CardBorderThickness}" />
    </Style>

    <!--  Outlined  -->
    <Style
		x:Key="DmxCoreOutlinedCardStyle"
		BasedOn="{StaticResource DmxCoreFilledCardStyle}"
		TargetType="utu:Card">

        <Setter Property="Background" Value="{ThemeResource OutlinedCardBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource OutlinedCardBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CardBorderThickness}" />
    </Style>


    <!--  Card Base Style  -->
    <Style x:Key="DmxCoreBaseCardStyle" TargetType="utu:Card">
        <Setter Property="MinHeight" Value="{StaticResource CardMinHeight}" />
        <Setter Property="MaxWidth" Value="{StaticResource CardMaxWidth}" />
        <Setter Property="CornerRadius" Value="{StaticResource CardCornerRadius}" />
        <Setter Property="Margin" Value="{StaticResource CardElevationMargin}" />
        <Setter Property="Padding" Value="{StaticResource CardPadding}" />
        <Setter Property="HeaderContentTemplate" Value="{StaticResource M3DefaultHeaderContentTemplate}" />
        <Setter Property="SubHeaderContentTemplate" Value="{StaticResource M3DefaultSubHeaderContentTemplate}" />
        <Setter Property="SupportingContentTemplate" Value="{StaticResource M3DefaultSupportingContentTemplate}" />
        <Setter Property="MediaContentTemplate" Value="{StaticResource M3DefaultMediaContentTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>



    <!-- Default -->
    <Style x:Key="DmxCoreButton" BasedOn="{StaticResource MaterialBaseButtonStyle}"
		   TargetType="Button">

        <Setter Property="Foreground" Value="{ThemeResource FilledButtonForeground}" />
        <Setter Property="Background" Value="{ThemeResource FilledButtonBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource FilledButtonBorderBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <toolkit:ElevatedView x:Name="ElevatedView"
										  Margin="{ThemeResource ButtonMargin}"
										  Elevation="{ThemeResource ButtonElevation}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Background="Transparent">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForeground}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPointerOver}" />
                                        <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPointerOver}" />
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPointerOver}" />
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPressed}" />
                                        <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPressed}" />
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPressed}" />
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundDisabled}" />
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundDisabled}" />
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>


                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundFocused}" />
                                        <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundFocused}" />
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundFocused}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundFocused}" />
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushFocused}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerFocused">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Background" Value="{ThemeResource FilledButtonBackgroundPointerFocused}" />
                                        <Setter Target="StateLayer.Background" Value="{ThemeResource FilledButtonStateLayerBackgroundPointerFocused}" />
                                        <Setter Target="IconPresenter.Foreground" Value="{ThemeResource FilledButtonIconForegroundPointerFocused}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource FilledButtonForegroundPointerFocused}" />
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource FilledButtonBorderBrushPointerFocused}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Root"
							  Background="{TemplateBinding Background}"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}">

                            <Border x:Name="StateLayer"
									Background="Transparent"
									CornerRadius="{TemplateBinding CornerRadius}" />

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  MinWidth="{ThemeResource ButtonIconMinWidth}"
														  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
														  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}"
														  Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

                                <ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  Margin="{ThemeResource ButtonContentMargin}"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  FontWeight="{TemplateBinding FontWeight}"
														  CharacterSpacing="{TemplateBinding CharacterSpacing}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Grid>
                    </toolkit:ElevatedView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="AvatarContentTemplateFixed40x40">
        <Image
			MaxHeight="40" Width="40" Height="40"
			Source="{Binding}"
			Stretch="None" />
    </DataTemplate>

    <Style x:Key="LargeColorPickerStyle" TargetType="ColorPicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ColorPicker">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" Padding="0,4"
                        MaxWidth="{StaticResource ColorPickerVerticalOrientationMaxWidth}"
                        MinWidth="{StaticResource ColorPickerVerticalOrientationMinWidth}">
                        <Grid.Resources>
                            <SolidColorBrush x:Name="CheckerColorBrush" Color="{ThemeResource SystemListLowColor}" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ColorSpectrumVisibility">
                                <VisualState x:Name="ColorSpectrumVisible" />
                                <VisualState x:Name="ColorSpectrumCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ColorSpectrum.Visibility" Value="Collapsed"/>
                                        <Setter Target="ColorPreviewRectangleGrid.Width" Value="NaN" />
                                        <Setter Target="ColorPreviewRectangleGrid.Height" Value="44"/>
                                        <Setter Target="ColorPreviewRectangleGrid.Margin" Value="0"/>
                                        <Setter Target="ColorPreviewRectangleGrid.(Grid.Column)" Value="0"/>
                                        <Setter Target="ColorPreviewRectangleGrid.(Grid.ColumnSpan)" Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ColorPreviewVisibility">
                                <VisualState x:Name="ColorPreviewVisible"/>
                                <VisualState x:Name="ColorPreviewCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ColorPreviewRectangleGrid.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PreviousColorVisibility">
                                <VisualState x:Name="PreviousColorCollapsedVertical"/>
                                <VisualState x:Name="PreviousColorVisibleVertical">
                                    <VisualState.Setters>
                                        <Setter Target="ColorPreviewRectangle.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="PreviousColorRectangle.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PreviousColorCollapsedHorizontal">
                                    <VisualState.Setters>
                                        <Setter Target="PreviousColorRectangle.(Grid.Row)" Value="0"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.Column)" Value="1"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.RowSpan)" Value="2"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.ColumnSpan)" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PreviousColorVisibleHorizontal">
                                    <VisualState.Setters>
                                        <Setter Target="ColorPreviewRectangle.(Grid.ColumnSpan)" Value="1"/>
                                        <Setter Target="PreviousColorRectangle.Visibility" Value="Visible"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.Row)" Value="0"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.Column)" Value="1"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.RowSpan)" Value="2"/>
                                        <Setter Target="PreviousColorRectangle.(Grid.ColumnSpan)" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ThirdDimensionSliderVisibility">
                                <VisualState x:Name="ThirdDimensionSliderVisible"/>
                                <VisualState x:Name="ThirdDimensionSliderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ThirdDimensionSliderGrid.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AlphaSliderVisibility">
                                <VisualState x:Name="AlphaSliderVisible"/>
                                <VisualState x:Name="AlphaSliderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="AlphaSliderGrid.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MoreButtonVisibility">
                                <VisualState x:Name="MoreButtonVisible"/>
                                <VisualState x:Name="MoreButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="MoreButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TextEntryGridVisibility">
                                <VisualState x:Name="TextEntryGridCollapsed"/>
                                <VisualState x:Name="TextEntryGridVisible">
                                    <VisualState.Setters>
                                        <Setter Target="TextEntryGrid.Visibility" Value="Visible"/>
                                        <Setter Target="MoreGlyph.Glyph" Value="&#xE70E;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ColorChannelTextInputVisibility">
                                <VisualState x:Name="ColorChannelTextInputVisible"/>
                                <VisualState x:Name="ColorChannelTextInputCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ColorRepresentationComboBox.Visibility" Value="Collapsed"/>
                                        <Setter Target="ColorChannelTextInputPanel.Visibility" Value="Collapsed"/>
                                        <Setter Target="HexTextBox.(Grid.Column)" Value="0"/>
                                        <Setter Target="HexTextBox.HorizontalAlignment" Value="Left"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AlphaTextInputVisibility">
                                <VisualState x:Name="AlphaTextInputVisible"/>
                                <VisualState x:Name="AlphaTextInputCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="AlphaPanel.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ColorRepresentationSelected">
                                <VisualState x:Name="RgbSelected" />
                                <VisualState x:Name="HsvSelected">
                                    <VisualState.Setters>
                                        <Setter Target="RgbPanel.Visibility" Value="Collapsed"/>
                                        <Setter Target="HsvPanel.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HexInputVisibility">
                                <VisualState x:Name="HexInputVisible"/>
                                <VisualState x:Name="HexInputCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HexTextBox.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AlphaEnabledState">
                                <VisualState x:Name="AlphaDisabled"/>
                                <VisualState x:Name="AlphaEnabled">
                                    <VisualState.Setters>
                                        <Setter Target="HexTextBox.MaxLength" Value="9"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Orientation">
                                <VisualState x:Name="Vertical"/>
                                <VisualState x:Name="Horizontal">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.MinHeight" Value="{StaticResource ColorPickerVerticalOrientationMinHeight}"/>
                                        <Setter Target="RootGrid.MaxHeight" Value="{StaticResource ColorPickerVerticalOrientationMaxHeight}"/>
                                        <Setter Target="RootGrid.MinWidth" Value="0"/>
                                        <Setter Target="RootGrid.MaxWidth" Value="10000"/>
                                        <Setter Target="ColorSpectrumGrid.Margin" Value="0"/>
                                        <Setter Target="ColorPreviewRectangleGrid.Margin" Value="12,0,16,0"/>

                                        <Setter Target="ThirdDimensionSliderGrid.(Grid.Column)" Value="1"/>
                                        <Setter Target="ThirdDimensionSliderGrid.(Grid.Row)" Value="0"/>
                                        <Setter Target="ThirdDimensionSliderGrid.Margin" Value="0,0,6,0" />
                                        <Setter Target="ThirdDimensionSlider.Margin" Value="0"/>
                                        <Setter Target="ThirdDimensionSlider.Orientation" Value="Vertical"/>
                                        <Setter Target="ThirdDimensionBackgroundRectangle.Height" Value="Auto"/>
                                        <Setter Target="ThirdDimensionBackgroundRectangle.Width" Value="11"/>
                                        <Setter Target="ThirdDimensionBackgroundRectangle.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ThirdDimensionBackgroundRectangle.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="ThirdDimensionBackgroundRectangle.RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180"/>
                                            </Setter.Value>
                                        </Setter>

                                        <Setter Target="AlphaSliderGrid.(Grid.Column)" Value="2"/>
                                        <Setter Target="AlphaSliderGrid.(Grid.Row)" Value="0"/>
                                        <Setter Target="AlphaSliderGrid.Margin" Value="0,0,16,0"/>
                                        <Setter Target="AlphaSlider.Orientation" Value="Vertical"/>
                                        <Setter Target="AlphaSlider.Margin" Value="0"/>
                                        <Setter Target="AlphaSliderCheckeredBackgroundRectangle.Height" Value="Auto"/>
                                        <Setter Target="AlphaSliderCheckeredBackgroundRectangle.Width" Value="11"/>
                                        <Setter Target="AlphaSliderCheckeredBackgroundRectangle.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="AlphaSliderCheckeredBackgroundRectangle.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="AlphaSliderBackgroundRectangle.Height" Value="Auto"/>
                                        <Setter Target="AlphaSliderBackgroundRectangle.Width" Value="11"/>
                                        <Setter Target="AlphaSliderBackgroundRectangle.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="AlphaSliderBackgroundRectangle.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="AlphaSliderBackgroundRectangle.RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180"/>
                                            </Setter.Value>
                                        </Setter>

                                        <Setter Target="MoreEntriesPanel.(Grid.Column)" Value="3"/>
                                        <Setter Target="MoreEntriesPanel.(Grid.Row)" Value="0"/>
                                        <Setter Target="MoreEntriesPanel.Margin" Value="0"/>
                                        <Setter Target="MoreButton.Margin" Value="0"/>

                                        <Setter Target="ColorRepresentationComboBox.(Grid.Row)" Value="1"/>
                                        <Setter Target="ColorTextInputPanels.(Grid.Row)" Value="2"/>
                                        <Setter Target="HexTextBox.(Grid.Row)" Value="0"/>
                                        <Setter Target="HexTextBox.(Grid.Column)" Value="0"/>
                                        <Setter Target="HexTextBox.(Grid.ColumnSpan)" Value="3"/>
                                        <Setter Target="HexTextBox.Margin" Value="0,0,0,12"/>
                                        <Setter Target="HexTextBox.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="HexTextBox.Width" Value="120"/>

                                        <Setter Target="RgbTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                                        <Setter Target="HsvTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                                        <Setter Target="AlphaTextLabelColumn.Width" Value="{ThemeResource ColorPickerTextInputHorizontalOrientationMargin}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Grid x:Name="ColorSpectrumGrid" Margin="0,0,0,15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ColorSpectrum
                                    x:Name="ColorSpectrum"
                                    Grid.Column="0" Grid.Row="0"
                                    MaxWidth="400" MaxHeight="450"
                                    MinWidth="370" MinHeight="375"
                                    MinHue="{TemplateBinding MinHue}"
                                    MaxHue="{TemplateBinding MaxHue}"
                                    MinSaturation="{TemplateBinding MinSaturation}"
                                    MaxSaturation="{TemplateBinding MaxSaturation}"
                                    MinValue="{TemplateBinding MinValue}"
                                    MaxValue="{TemplateBinding MaxValue}"
                                    Shape="{TemplateBinding ColorSpectrumShape}"
                                    Components="{TemplateBinding ColorSpectrumComponents}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                <Grid x:Name="ColorPreviewRectangleGrid" Grid.Column="1" Grid.Row="0" Width="44" Margin="12,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                                        <Rectangle.Fill>
                                            <ImageBrush x:Name="ColorPreviewRectangleCheckeredBackgroundImageBrush" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="ColorPreviewRectangle" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                                    <Rectangle x:Name="PreviousColorRectangle" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Row="1" Visibility="Collapsed"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                                    <Rectangle x:Name="BorderRectangle" Style="{StaticResource ColorPickerBorderStyle}" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                               RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                                </Grid>
                            </Grid>
                            <Grid x:Name="ThirdDimensionSliderGrid" Grid.Row="1">
                                <Rectangle x:Name="ThirdDimensionBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="11" VerticalAlignment="Center"
                                           RadiusX="{Binding ColorPickerSliderCornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding ColorPickerSliderCornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush x:Name="ThirdDimensionSliderGradientBrush" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ColorPickerSlider x:Name="ThirdDimensionSlider" Minimum="0" Maximum="100" Margin="0,5,0,0" ColorChannel="Value" Orientation="Horizontal" Style="{StaticResource LargePickerSliderStyle}" IsThumbToolTipEnabled="False" />
                            </Grid>
                            <Grid Margin="0,0,0,3" x:Name="AlphaSliderGrid" Grid.Row="2">
                                <Rectangle x:Name="AlphaSliderCheckeredBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="11" VerticalAlignment="Center"
                                           RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="AlphaSliderCheckeredBackgroundImageBrush" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="AlphaSliderBackgroundRectangle" RenderTransformOrigin="0.5, 0.5" Height="11" VerticalAlignment="Center"
                                           RadiusX="{Binding ColorPickerSliderCornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           RadiusY="{Binding ColorPickerSliderCornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush x:Name="AlphaSliderGradientBrush" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ColorPickerSlider x:Name="AlphaSlider" Minimum="0" Maximum="100" Margin="0,5,0,0" ColorChannel="Alpha" Orientation="Horizontal" Style="{StaticResource LargePickerSliderStyle}" IsThumbToolTipEnabled="False" />
                            </Grid>
                            <StackPanel x:Name="MoreEntriesPanel" Grid.Row="3" Margin="0,12,0,12">
                                <ToggleButton
                                    x:Name="MoreButton"
                                    MinHeight="32"
                                    MinWidth="120"
                                    Padding="0"
                                    HorizontalAlignment="Right"
                                    HorizontalContentAlignment="Right">
                                    <ToggleButton.Content>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,7">
                                            <TextBlock x:Name="MoreButtonLabel" VerticalAlignment="Center" />
                                            <FontIcon x:Name="MoreGlyph"
                                                Margin="8,0,0,0"
                                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                Glyph="&#xE70D;"
                                                FontSize="12" />
                                        </StackPanel>
                                    </ToggleButton.Content>
                                    <ToggleButton.Resources>
                                        <ResourceDictionary>
                                            <ResourceDictionary.ThemeDictionaries>
                                                <ResourceDictionary x:Key="Default">
                                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemBaseHighColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemBaseHighColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="HighContrast">
                                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{ThemeResource SystemColorButtonTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemColorButtonTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="{ThemeResource SystemColorButtonTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemColorButtonTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemColorHighlightColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemColorGrayTextColor}" />
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="Light">
                                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForeground" Color="{ThemeResource SystemBaseHighColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemBaseHighColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemBaseMediumColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedDisabled" Color="Transparent" />
                                                    <SolidColorBrush x:Key="ToggleButtonForegroundCheckedDisabled" Color="{ThemeResource SystemBaseMediumLowColor}" />
                                                </ResourceDictionary>
                                            </ResourceDictionary.ThemeDictionaries>
                                        </ResourceDictionary>
                                    </ToggleButton.Resources>
                                </ToggleButton>
                                <Grid x:Name="TextEntryGrid" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ComboBox Grid.Row="0" x:Name="ColorRepresentationComboBox" Width="120">
                                        <ComboBoxItem x:Name="RGBComboBoxItem" Content="RGB" IsSelected="True"/>
                                        <ComboBoxItem x:Name="HSVComboBoxItem" Content="HSV"/>
                                    </ComboBox>
                                    <StackPanel x:Name="ColorTextInputPanels" Grid.Row="1" Grid.ColumnSpan="3">
                                        <StackPanel x:Name="ColorChannelTextInputPanel" HorizontalAlignment="Stretch">
                                            <Grid x:Name="RgbPanel">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition x:Name="RgbTextLabelColumn" Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBox x:Name="RedTextBox" Grid.Row="0" Grid.Column="0" Width="120" MaxLength="3" Text="255" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="RedLabel" Grid.Row="0" Grid.Column="2" Text="Red" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                <TextBox x:Name="GreenTextBox" Grid.Row="1" Grid.Column="0" Width="120" MaxLength="3" Text="255" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="GreenLabel" Grid.Row="1" Grid.Column="2" Text="Green" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                <TextBox x:Name="BlueTextBox" Grid.Row="2" Grid.Column="0" Width="120" MaxLength="3" Text="255" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="BlueLabel" Grid.Row="2" Grid.Column="2" Text="Blue" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                            </Grid>
                                            <Grid x:Name="HsvPanel" Visibility="Collapsed">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="8"/>
                                                    <ColumnDefinition x:Name="HsvTextLabelColumn" Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBox x:Name="HueTextBox" Grid.Row="0" Grid.Column="0" Width="120" MaxLength="3" Text="0" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="HueLabel" Grid.Row="0" Grid.Column="2" Text="Hue" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                <TextBox x:Name="SaturationTextBox" Grid.Row="1" Grid.Column="0" Width="120" MaxLength="3" Text="0" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="SaturationLabel" Grid.Row="1" Grid.Column="2" Text="Saturation" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                                <TextBox x:Name="ValueTextBox" Grid.Row="2" Grid.Column="0" Width="120" MaxLength="3" Text="100" Margin="0,12,0,0"/>
                                                <TextBlock x:Name="ValueLabel" Grid.Row="2" Grid.Column="2" Text="Value" VerticalAlignment="Center" Margin="0,12,0,0"/>
                                            </Grid>
                                        </StackPanel>
                                        <Grid x:Name="AlphaPanel" Margin="0,12,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="8"/>
                                                <ColumnDefinition x:Name="AlphaTextLabelColumn" Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBox x:Name="AlphaTextBox" Width="120" MaxLength="4" Text="100%"/>
                                            <TextBlock x:Name="AlphaLabel" Grid.Column="2"  Text="Opacity" VerticalAlignment="Center"/>
                                        </Grid>
                                    </StackPanel>
                                    <TextBox x:Name="HexTextBox" Grid.Column="2" MaxLength="7" Text="#FFFFFF" Width="132" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargePickerSliderStyle" TargetType="ColorPickerSlider">
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="SliderThumbStyle" TargetType="Thumb">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Background" Value="{ThemeResource ColorPickerSliderThumbBackground}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border BorderBrush="{ThemeResource SliderThumbBorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{ThemeResource SliderOuterThumbBackground}"
                                                CornerRadius="{ThemeResource SliderThumbCornerRadius}">
                                                <Ellipse x:Name="SliderInnerThumb"
                                                    Fill="{TemplateBinding Background}"                                                  
                                                    Width="{ThemeResource ColorPickerSliderInnerThumbWidth}"
                                                    Height="{ThemeResource ColorPickerSliderInnerThumbHeight}">
                                                </Ellipse>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundPressed}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource ColorPickerHeaderContentDisabled}"/>
                                        <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundDisabled}"/>
                                        <Setter Target="HorizontalTrackRect.Fill" Value="{ThemeResource ColorPickerSliderTrackFillDisabled}"/>
                                        <Setter Target="HorizontalDecreaseRect.Fill" Value="{ThemeResource ColorPickerSliderTrackFillDisabled}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="HorizontalThumb.Background" Value="{ThemeResource ColorPickerSliderThumbBackgroundPointerOver}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusEngagementStates">
                                <VisualState x:Name="FocusDisengaged"/>
                                <VisualState x:Name="FocusEngagedHorizontal">
                                    <VisualState.Setters>
                                        <Setter Target="SliderContainer.(Control.IsTemplateFocusTarget)" Value="False"/>
                                        <Setter Target="HorizontalThumb.(Control.IsTemplateFocusTarget)" Value="True"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FocusEngagedVertical">
                                    <VisualState.Setters>
                                        <Setter Target="SliderContainer.(Control.IsTemplateFocusTarget)" Value="False"/>
                                        <Setter Target="VerticalThumb.(Control.IsTemplateFocusTarget)" Value="True"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SliderHeaderForeground}" FontWeight="{ThemeResource SliderHeaderThemeFontWeight}" Margin="{ThemeResource SliderHeaderThemeMargin}" TextWrapping="Wrap" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                        <Grid x:Name="SliderContainer"
                                Background="Transparent"
                                Control.IsTemplateFocusTarget="True"
                                Grid.Row="1"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid x:Name="HorizontalTemplate" MinHeight="38">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="14"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="14"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="Transparent" Height="{ThemeResource SliderTrackThemeHeight}" Grid.Row="1" Opacity="0"
                                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                                <Rectangle x:Name="HorizontalDecreaseRect" Fill="Transparent" Grid.Row="1" Opacity="0" />
                                <Thumb x:Name="HorizontalThumb" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{ThemeResource SliderHorizontalThumbHeight}" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource SliderThumbStyle}" Width="{ThemeResource SliderHorizontalThumbWidth}" />
                            </Grid>
                            <Grid x:Name="VerticalTemplate" MinHeight="38">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{ThemeResource SliderPreContentMargin}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="{ThemeResource SliderPostContentMargin}" />
                                </Grid.ColumnDefinitions>

                                <Rectangle x:Name="VerticalTrackRect" Grid.RowSpan="3" Fill="Transparent" Width="{ThemeResource SliderTrackThemeHeight}" Grid.Column="1" Opacity="0"
                                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                                <Rectangle x:Name="VerticalDecreaseRect" Fill="Transparent" Grid.Column="1" Grid.Row="2" Opacity="0" />
                                <Thumb x:Name="VerticalThumb" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" DataContext="{TemplateBinding Value}" Height="{ThemeResource SliderHorizontalThumbHeight}" Style="{StaticResource SliderThumbStyle}" Width="{ThemeResource SliderHorizontalThumbWidth}" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
